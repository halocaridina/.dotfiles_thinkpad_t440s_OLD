# -*- coding: utf-8 -*-

import subprocess

import os
import os.path

from i3pystatus import Status, IntervalModule

from i3pystatus.mail import imap

class RestartReminder(IntervalModule):
    settings = required = ()

    def run(self):
        if os.path.exists("/lib/modules/" + os.uname().release):
            self.output = None
        else:
            self.output = {
                "full_text": ": ",
                "color": "#FF1919",
            }

status = Status(standalone=True)

status.register("shell",
    color="#00FF00",
    command="/usr/local/bin/vpn_activity.sh")

status.register("clock",
    format=": %I:%M %p",)

status.register("clock",
    format=": %a-%d-%b",)

status.register("text",
    text="X",
    cmd_leftclick="/usr/bin/gsimplecal",
    color="#222222")

status.register("shell",
    interval=600,
    command="/usr/local/bin/weather_report.sh")

status.register("text",
    text="X",
    color="#222222")

status.register("battery",
    battery_ident="BAT1",
    format="{status} {percentage:.0f}% {remaining:%E%hh:%Mm} {consumption:.1f} W",
    alert=True,
    alert_percentage=15,
    color="#FFFFFF",
    critical_color="#FF1919",
    charging_color="#FFFF19",
    full_color="#FFFFFF",
    status={
        "DIS": ":",
        "CHR": ":",
        "FULL": ":",
},)

status.register("text",
    text="X",
    color="#222222")

status.register("pulseaudio",
    format=": {db} dB",
    format_muted=": M",
    color_muted="#FF0000")

status.register("backlight",
    format=": {percentage:.0f}%",
    backlight="intel_backlight")

status.register("text",
    text="X",
    color="#222222")

status.register("uptime",
    format=": {uptime} hrs",
    color="#FFFFFF")

status.register("uname",
    format=": {release}")

status.register(RestartReminder())

status.register("text",
    text="X",
    color="#222222")

#status.register("mail",
#    email_client="/usr/local/bin/mutt",
#    format=": {unread}",
#    format_plural=": {unread}",
#    color_unread="#00FFFF",
#    backends=[
#        imap.IMAP(
#             # port and ssl are the defaults
#             host="131.204.120.103", port=993, ssl=True,
#             username="srsantos", password="XXXXXXXXXXXX"
#            )
#])

status.run()
