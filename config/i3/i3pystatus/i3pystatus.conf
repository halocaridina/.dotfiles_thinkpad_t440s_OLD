# -*- coding: utf-8 -*-

import subprocess

import os
import os.path

from i3pystatus import Status, IntervalModule

#from i3pystatus.mail import imap

#from i3pystatus.updates import pacman, cower

class RestartReminder(IntervalModule):
    settings = required = ()

    def run(self):
        if os.path.exists("/lib/modules/" + os.uname().release):
            self.output = None
        else:
            self.output = {
                "full_text": ": ",
                "color": "#FF1919",
            }

status = Status(standalone=True)

status.register("runwatch",
    interval=5,
    color_down="#222222",
    color_up="#E5E500",
    path="/var/run/NetworkManager/nm-vpnc-b36460e8-359e-4892-94ac-6cb959a3156f.pid",
    name="")

status.register("clock",
    format=": %I:%M %p",
    interval=5,
    on_leftclick="/usr/bin/gsimplecal",)

status.register("clock",
    format=": %a-%d-%b",
    interval=5,
    on_leftclick="/usr/bin/gsimplecal",)

#status.register("text",
#    text="X",
#    color="#222222")

#status.register("shell",
#    interval=1200,
#    command="/usr/local/bin/weather_report.sh")

#status.register("mem",
#    format="{used_mem:.0f} MB")
#    color="#XXXXXX"

#status.register("load",)

#status.register("disk",
#    path="/",
#    format="{used}/{total} GB",)

#status.register("temp",
#    format="{temp:.0f} °C")

#status.register("updates",
#                format = ": {count}",
#                color="#",
#                backends = [pacman.Pacman(), cower.Cower()])

#status.register("network",
#    interface="wlp3s0",
#    color_up
#    color_down
#    format_up=": {v4} - {essid} - {quality}%",
#    format_down="",)

#status.register("network",
#    interface="enp0s25",
#    color_up
#    color_down
#    format_up=": {v4}",
#    format_down="",)

#status.register("cpu_usage",
#    format=": {usage:02}%",)

#status.register("dpms",)
#

status.register("text",
    text="X",
    color="#222222")

status.register("battery",
    battery_ident="BAT1",
    interval=5,
    format="{status} {percentage:.0f}% {remaining:%E%hh:%Mm} {consumption:.1f} W",
    alert=True,
    alert_percentage=15,
    color="#FFFFFF",
    critical_color="#FF1919",
    charging_color="#FFFF19",
    full_color="#FFFFFF",
    status={
        "DIS": ":",
        "CHR": ":",
        "FULL": ":",
},)

status.register("text",
    text="X",
    color="#222222")

status.register("pulseaudio",
    format=": {db} dB",
    format_muted=": M",
    color_muted="#FF0000")

status.register("backlight",
    interval=5,
    format=": {percentage:.0f}%",
    backlight="intel_backlight")

status.register("text",
    text="X",
    color="#222222")

status.register("uptime",
    interval=5,
    format=": {hours} hrs",
    color="#FFFFFF")

status.register("uname",
    format=": {release}")

status.register(RestartReminder())

status.register("text",
    text="X",
    color="#222222")

# To use the below, first invoke ssh -N -T -L 11111:131.204.120.103:993 tunnel_thru_zetta

#status.register("mail",
#    email_client="/usr/local/bin/mutt",
#    format=": {unread}",
#    format_plural=": {unread}",
#    color_unread="#00FFFF",
#    backends=[
#        imap.IMAP(
             # port and ssl are the defaults
#             host="localhost", port=11111, username="srsantos", password="XXXXXXXXXXXX"
#            )
#])

status.run()
